apply plugin: 'com.android.application'

apply plugin: 'org.greenrobot.greendao' // apply plugin
android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.koma.music"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    //签名配置
    signingConfigs {
        release {
            storeFile file(STORE_FILE_PATH)
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //不去除无用代码
            minifyEnabled false
            //不进行对齐
            zipAlignEnabled false
            //不去除无用资源
            shrinkResources false
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            // 去除无用代码
            minifyEnabled false
            // 进行对齐
            zipAlignEnabled false
            // 移除无用的资源
            shrinkResources false
            // 配置混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 配置签名
            signingConfig signingConfigs.release
        }
    }

    //去除经过zip对齐但是没有签名的产物
    applicationVariants.all { variant ->
        variant.assemble.doLast {
            variant.outputs.each { output ->
                println "aligned " + output.outputFile
                println "unaligned " + output.packageApplication.outputFile

                File file = output.packageApplication.outputFile;
                if (variant.buildType.zipAlignEnabled && file.getName().contains("unaligned")) {
                    println "deleting " + file.getName()
                    file.delete()
                }
            }
        }
    }

    lintOptions {
        //忽略lint error
        abortOnError false
    }

    greendao {
        schemaVersion 1
        targetGenDir 'src/main/java'
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:design:25.3.1'
    testCompile 'junit:junit:4.12'

    compile 'com.android.support:palette-v7:25.3.1'

    compile 'com.android.support:cardview-v7:25.3.1'

    compile 'com.android.support:percent:25.3.1'

    compile 'com.jakewharton:butterknife:8.6.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'

    compile "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"

    compile "io.reactivex:rxandroid:$rootProject.ext.rxandroidVersion"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile "io.reactivex:rxjava:$rootProject.ext.rxjavaVersion"

    compile 'com.sothree.slidinguppanel:library:3.3.1'

    //imageloader
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'

    compile 'org.greenrobot:greendao:3.2.2' // add library

    //leakcanary
    debugCompile "com.squareup.leakcanary:leakcanary-android:$rootProject.ext.leakcanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.ext.leakcanaryVersion"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.ext.leakcanaryVersion"
}
